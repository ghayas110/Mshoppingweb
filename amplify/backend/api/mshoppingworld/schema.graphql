type User @model @key(name: "byChildUser", fields: ["parentId"])  {
  id: ID!
  userName: String
  firstName: String!
  middleName: String
  lastName: String!
  parentId: ID!
  phone_number: String!
  email: String!
  userCode: String!
  userType: String
  userRole: String
  gender: String
  dob: String
  address: String
  city: String
  CNIC: String
  bank: [Bank] 
  canRegister: Boolean
  status: String
}

# type Bank @model @key(name: '') {
  
# }


type Plan @model @key(name: "listPlansByFees", fields: ["fee"], queryField: "listPlansByFees") {
  id: ID!
  name: String!
  fee: String!
  term: Int!
  ROI: Float!
  startDate: String!
  endDate: String
  status: String
  subscription: String
  levels: Int
}

type UserPlans @model @key(name: "byUser", fields: ["userId", "planId"]) {
  id: ID!
  userId: ID!
  user: User! @connection(fields: ["userId"])
  planId: ID!
  plan: Plan! @connection(fields: ["planId"])
  transactionCode: String
  startingDate: String
  paymentStatus: String
  planStatus: String
}


# type Product @model @key(name: "byUser", fields: ["userId"])  {
#   id: ID!
#   userId: ID!
#   user: User! @connection(fields: ["userId"])
#   title: String!
#   description: String!
#   price: Float!
#   quantity: Int!
# }